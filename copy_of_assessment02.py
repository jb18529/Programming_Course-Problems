# -*- coding: utf-8 -*-
"""Copy of assessment02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VP5BQIxjAmXLHdYYCRQwYBvNF_q5qOSi

**Exercise 1.** Here is a function that takes a word and returns the correctly spelled word if it recognises it as a common mis-spelling, otherwise it just returns the original word:
"""

def spellCheck(word):
    spelling = {"teh":"the", "phyton":"python", "cta":"cat", "pyhton":"python", "dgo":"dog",\
               "dukc":"duck", "mta":"mat"}
    if word in list(spelling.keys()):
        return spelling[word]
    else:
        return word

"""...and here is a function that takes a word and translates it from English to French:"""

def translate(word):
    frenchDictionary = { "cat":"chat", "dog":"chien", "mouse":"souris",\
                        "horse":"cheval", "cow":"vache", "sheep":"mouton",\
                        "chicken":"poulet", "parrot":"perroquet", "duck":"canard",\
                        "the":"la", "sat":"s'est assis", "mat":"tapis", "on":"sur"}
    if word in list(frenchDictionary.keys()):
        return frenchDictionary[word]
    else:
        return "(word not known)"

"""In the next paragraph, write a function *checkAndTranslate* that:
* takes as a parameter a string that is an English sentence with spelling mistakes
* corrects the spelling mistakes
* translates it into French
* returns the string

Your code should use the two functions above.
"""

#write your function here
def checkAndTranslate(test):
  incorrect_sentence = list(test.split(" "))
  list1 = []
  for word in incorrect_sentence:
    x = spellCheck(word)
    y = translate(x)
    list1.append(y)

  correct_sentence = " ".join(str(word) for word in list1)

  return correct_sentence

"""In the next block, write a couple of *print* statements to test your code."""

#write a couple of print statements here to test your code
print(checkAndTranslate("teh cta on mouse"))

print(checkAndTranslate("cta"))
 
print(checkAndTranslate("dukc"))

print(checkAndTranslate("cat"))

print(checkAndTranslate("tehdfd"))


print(checkAndTranslate(" "))

"""**Exercise 2.** Copy *testProgram2* from Monday 24th's lecture into the next block."""

#copy testProgram2 here
def testProgram2(testValues,f):
    testPasses = []
    for test in list(testValues):
        try:
            if f(test)==testValues[test]:
                testPasses.append(True)
            else:
                testPasses.append(False)
        except:
            if testValues[test]=="error":
                 testPasses.append(True)
            else:
                testPasses.append(False)               
    print(testPasses)
    if False not in testPasses:
        print("all tests passed")

"""In the next block, write a dictionary of test cases that tests your function *checkAndTranslate* from Exercise 1 and uses testProgram2 to test it. That is, the dictionary should consist of pairs of matching input:output sentences. Make sure you include one example in your test cases that includes "(word not known)", and one input that is of the wrong type so that it causes an error in the code for *checkAndTranslate*."""

#testValues is testCases and f is the checkAndTranslate function
testCases = {"teh":"la", "dgo":"chien", "sheep":"mouton", "perrot":"(word not known)", "yes":"(word not known)", "perrot":"(word not known)"}

print(testProgram2(testCases, checkAndTranslate))

"""**Exercise 3.** Here is a dictionary of words describing computer problems, and corresponding advice:"""

advice = { "blank":"try turning the screen on", "signal":"reboot the Wi-Fi", \
          "power":"check if the battery is charged", "frozen":"turn it off and on again"}

"""In the next block, write a function *giveHelp()*, which takes a string of text and the advice dictionary as parameters, finds which of the key words ("blank","signal", etc.) are in that string, and then returns a string containing all of the matching advice, each on its own line. If a word is repeated, the advice should be given only once.

For example, if the input is "My computer is frozen the keyboard has no power and the monitor has no power", the response should be:

turn it off and on again\
check if the battery is charged
"""

#write your function here 
def giveHelp(test, advice_dict):
  keys = list(advice_dict.keys())
  testing = test.split()
  response = ""
  for i in testing:
    if i in keys:
      response += advice_dict[i] + "\n"
      keys.remove(i)
  return response

"""In the next block, write a couple of *print* statements to test your code."""

##write a couple of print statements here to test your code
test = "My computer is frozen the keyboard has no power and the monitor has no power"
print(giveHelp(test, advice))

test2 = "My screen is blank and the signal is really poor"
print(giveHelp(test2, advice))

test3 = "why is my screen frozen and my other screen blank, it must be somthing wrong with the power or the signal or maybe its just frozen or blank"
print(giveHelp(test3, advice))

"""**Exercise 4.** In the next block, write a function timeGuess() which prints the word "start", waits for a random amount of time (between 1-10 seconds), then prints the word "stop". The user then has to guess how long the time interval was between start and stop. If they get it right, print "big win". If it is one second too long or too short, print "small win". Otherwise, print "lose"."""

import time
import random

def timeGuess():

  x = random.randint(1,10)
  print("start")
  time.sleep(x)
  print("stop")

  user = int(input("How much time did it take from start to stop in seconds? "))

  if user == x:
    return "big win"
  elif user == (x-1) or user == (x+1):
    return "small win"
  else:
    return "lose"

"""In the next block run your code to check that it is working"""

#run your code here to see if it is working
print(timeGuess())

"""**Exercise 5.** Here are two dictionaries, one of which translates word-by-word from English to French, one from French to German:"""

englishFrenchDictionary = { "cat":"chat", "dog":"chien", "mouse":"souris",\
                    "horse":"cheval", "cow":"vache", "sheep":"mouton",\
                    "the":"la", "eats":"mange", "food":"nourriture", "chicken":"poulet"}
frenchGermanDictionary = { "chat":"Katze", "souris":"Maus", "chien":"Hund",\
                         "cheval":"Pferd", "vache":"Kuh", "mouton":"Schaf",\
                         "la":"das", "mange":"frisst", "nourriture":"Futter"}

"""In the next block, write a function *combineDictionaries* that takes as input two dictionaries, and returns a dictionary which combines the two, so that the key words from the first dictionary match onto the corresponding values in the second dictionary. Note that the return from this function is the whole dictionary, not the individual words. If there is a word in the values of the first dictionary that is not in the keys of the second, instead add "(not known)" as the value in the new dictionary."""

def combineDictionaries(dict_1, dict_2):
  combined_dictionary = {}

  key1 = list(dict_1.keys())
  key2 = list(dict_2.keys())

  for i in key1:
    if dict_1[i] in key2:
      combined_dictionary.update({i:dict_2[dict_1[i]]})
    else:
      combined_dictionary.update({i:"(not known)"})
      
  return combined_dictionary

"""In the next block, write a *print* statement to test your code using the above two dictionaries."""

#write a print statements here to test your code

print(combineDictionaries(englishFrenchDictionary, frenchGermanDictionary))